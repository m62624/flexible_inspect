/*
Эти четыре модуля - это как четыре разных повара, которые готовят разные блюда, используя одни и те же ингредиенты. Ингредиенты здесь - это `regexset`, `all_simple_rules` и `complex_rules`. Но каждый повар (модуль) готовит по-своему, создавая уникальные блюда (режимы работы).

1. `all_rules_for_all_matches.rs`: Этот модуль - как повар, который убеждается, что каждый ингредиент (правило) используется в каждом блюде (совпадении). Если ингредиент отсутствует в одном из блюд, он считает, что приготовление не удалось.

2. `all_rules_for_at_least_one_match.rs`: Этот модуль - как повар, который хочет использовать каждый ингредиент хотя бы в одном блюде. Если есть ингредиент, который не используется ни в одном блюде, он считает, что приготовление не удалось.

3. `at_least_one_rule_for_all_matches.rs`: Этот модуль - как повар, который хочет, чтобы хотя бы один ингредиент был в каждом блюде. Если есть блюдо без ингредиентов, он считает, что приготовление не удалось.

4. `at_least_one_rule_for_at_least_one_match.rs`: Этот модуль - как повар, который хочет, чтобы хотя бы один ингредиент был использован хотя бы в одном блюде. Если все блюда приготовлены без использования любого из ингредиентов, он считает, что приготовление не удалось. Это как если бы повар хотел убедиться, что каждый ингредиент хотя бы раз использовался, но не обязательно в каждом блюде.

Таким образом, хотя все четыре модуля используют одни и те же "ингредиенты", они создают разные "блюда" в зависимости от своих уникальных стратегий приготовления.
 */

use super::*;

mod all_rules_for_all_matches;
mod all_rules_for_at_least_one_match;
mod at_least_one_rule_for_all_matches;
mod at_least_one_rule_for_at_least_one_match;
